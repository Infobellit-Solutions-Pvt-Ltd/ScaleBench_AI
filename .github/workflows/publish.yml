name: ScaleBench CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pytest pytest-cov

      - name: Install package
        run: pip install -e .

      - name: Verify package structure
        run: python -c "import scalebench; import scalebench.utils; print('‚úÖ Package structure verified')"

      - name: Run tests
        run: pytest -v --tb=short --maxfail=1

    build-and-publish:
      needs: test
      if: github.event_name == 'release'
      runs-on: ubuntu-latest
      permissions:
        id-token: write   # Needed for Trusted Publisher
        contents: read

      steps:
        - uses: actions/checkout@v4

        - name: Set up Python
          uses: actions/setup-python@v5
          with:
            python-version: '3.10'

        - name: Install build tools
          run: |
            python -m pip install --upgrade pip
            pip install build twine

        - name: Build package
          run: python -m build

        # ---- OPTION 1: Secure PyPI token upload ----
        - name: Publish using API token
          if: ${{ secrets.PYPI_API_TOKEN != '' }}
          env:
            TWINE_USERNAME: __token__
            TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
          run: |
            echo "üîê Using PyPI API token for upload"
            twine upload dist/*

        # ---- OPTION 2: Trusted Publisher (no secrets) ----
        - name: Publish via Trusted Publisher (OIDC)
          if: ${{ secrets.PYPI_API_TOKEN == '' }}
          uses: pypa/gh-action-pypi-publish@release/v1
          with:
            repository-url: https://upload.pypi.org/legacy/
